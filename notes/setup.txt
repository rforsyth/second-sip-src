

________________________________________________________
Prodedure for installing on clean Snow Leopard

- install Xcode
- install Homebrew
- update config files (.profile, .bash_profile, .vimrc, ...)

- now follow these instructions: https://gist.github.com/405350

- install git (brew install git)
- install rvm

- install Navicat Lite
- install TextMate


- after installing postgres (used homebrew)
$ psql template1  
$ create role ss_rails with createdb login password 'eu4ric';
$ select * from pg_user;    // verify user created
$ select * from pg_shadow;  // sysid listed here
$ bundle exec rake db:create:all


________________________________________________________
.vimrc

"filetype on  " Automatically detect file types.
syntax enable
set nu  " Line numbers on
set nowrap  " Line wrapping off
colorscheme vividchalk  " Uncomment this to set a default theme
set ts=2  " Tabs are 2 spaces

" Visual
set showmatch  " Show matching brackets.
set mat=5  " Bracket blinking.
"set list  " highlight whitespace (ampersands and tildes)

set novisualbell  " No blinking .
set noerrorbells  " No noise.
set laststatus=2  " Always show status line.

" Formatting
set ts=2  " Tabs are 2 spaces
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set nocp incsearch
set cindent
set autoindent
set smarttab
set expandtab
 
"ruby
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1 
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1 
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1 

"improve autocomplete menu color
highlight Pmenu ctermbg=238 gui=bold


________________________________________________________
.bash_profile

# Source global definitions
if [ -f /etc/bashrc ]; then
 . /etc/bashrc
fi

# colored branch notification in your prompt
# include git completion, this is available off dasdev1 or with the git distribution
source $HOME/src/git-1.6.4.2/contrib/completion/git-completion.bash
export PS1='\h:\[\e[32;1m\]\W\[\e[0m\]$(__git_ps1 "(%s)") \u\$ '
export CLICOLOR=1
export TERM=xterm-color
export LSCOLORS=fxfxcxdxbxegedabagacad
set -o vi

________________________________________________________
.profile

if [ -f ~/.bash_profile ]; then
  . ~/.bash_profile
fi

if [ ! $SSH_AGENT_PID ]
  then
    eval `ssh-agent`
    ssh-add
    SSH_AGENT_MINE=1
fi
export PATH="/opt/local/bin:/opt/local/sbin:/usr/local/mysql/bin:/opt/local/lib/postgresql83/bin:.:$PATH"
alias vim=/Applications/MacVim.app/Contents/MacOS/Vim

________________________________________________________
.gitconfig

[user]
  name = Ryan Forsyth
  email = rforsyth@whitepages.com
[merge]
  tool = vimdiff
[core]
  excludesfile = /home/rforsyth/.gitignore

________________________________________________________
.gitignore

._*
.DS_Store
bundle.txt




________________________________________________________
Postgres

- installed Navicat
- used Navicat to set up role: rforsyth with password (network password)

- followed this guide to install rails 3.0 and ruby 1.9.2
  - didn't install mysql
http://amerine.net/2010/02/24/rvm-rails3-ruby-1-9-2-setup.html

- this may be a more up-to-date postgres install guide
https://willj.net/2011/05/31/setting-up-postgresql-for-ruby-on-rails-development-on-os-x/

- using postgres-pr for DB
$ gem install postgres-pr

- trying to install native gem failed (gem install postgres):
  ERROR:  Error installing postgres:
  	ERROR: Failed to build gem native extension.
          /Users/rforsyth/.rvm/rubies/ruby-1.9.2-p180/bin/ruby extconf.rb
  extconf.rb:4:in `<main>': uninitialized constant Object::PLATFORM (NameError)
  Gem files will remain installed in /Users/rforsyth/.rvm/gems/ruby-1.9.2-p180@rails3/gems/postgres-0.7.9.2008.01.28 for inspection.
  Results logged to /Users/rforsyth/.rvm/gems/ruby-1.9.2-p180@rails3/gems/postgres-0.7.9.2008.01.28/ext/gem_make.out

________________________________________________________
Postgres Admin

- followed instructions on this page:
http://shifteleven.com/articles/2008/03/21/installing-postgresql-on-leopard-using-macports





